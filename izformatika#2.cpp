/*
По каналу связи передаётся сообщение из целых чисел, не превышающих 1000. Длина сообщения неизвестна заранее, 
сигналом окончания передачи служит число -9999. Для проверки того, что сообщение передано без помех, используется
примитивный алгоритм подсчёта контрольной суммы - вычисляется количество пар различных элементов, произведение которых 
неотрицательное и чётное. Под различными элементами имеются в виду числа, которые стоят на разных местах в сообщении, 
но при этом значения их могут совпадать. Реализуйте вычисление контрольной суммы.
*/

#include <iostream> //библиотека ввода вывода
#include <vector>   //библиотека для работы с векторами
using namespace std;

int main()
{
  vector<int> vct;
  while(true)
  {
    int val;
    cin >> val;
    if(val == -9999)
      break;
    vct.push_back(val); //добавляет число в вектор
  }
  
  int check_sum = 0; // кол-во пар
  for(int i = 0 ; i < vct.size(); ++i) // vct.size() - кол-во элементов в векторе
  {
    for(int m = i+1 ; m < vct.size(); ++m)
    {
      int this_pair = vct[i] * vct[m];  
      if( (this_pair >= 0) && ( (this_pair % 2) == 0) ) // главное условие проверки пар
        check_sum++; //+1 пара
    }
  }

  cout << "result " << check_sum;
  
  
return 0;
}
