/*
По каналу связи передаётся сообщение из натуральных чисел, не превышающих 1000. Длина сообщения неизвестна заранее, 
сигналом окончания передачи служит число -9999. Для проверки того, что сообщение передано без помех, используется примитивный 
алгоритм подсчёта контрольной суммы - находится минимальное произведение двух различных (стоящих на разных местах в сообщении,
но может быть и одинаковых по значению) чисел из сообщения, которое при этом не делится на 6. Реализуйте вычисление контрольной суммы.
*/

#include <iostream> //библиотека ввода вывода
#include <vector> //библиотека для работы с векторами
using namespace std;

int main()
{
  vector<int> vct; //объявляем вектор
  while(true)
  {
    int val;
    cin >> val;
    if(val == -9999)
      break; // выйти из цикла
    vct.push_back(val); // добавляем число в вектор
    
  }
  
  int  check_sum = 999999; //просто большое число
  for(int l = 0 ; l < vct.size(); ++l) // vct.size() - кло-во элементов в массиве
  {
    for(int m = l+1 ; m < vct.size(); ++m)
    {
      int this_pair = vct[l] * vct[m];
      if( (this_pair < check_sum) && (this_pair % 6 != 0) ) //главное условие
        check_sum = this_pair;        
    }
  } 
  if(check_sum == 999999) // условие если сумму получить невозможно
    cout << "FAIL";
  else 
    cout << check_sum;
  return 0;
}
